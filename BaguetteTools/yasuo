if myHero.charName ~= "Yasuo" then return end

function OnLoad()
	Lib();
	Menu();
	Flash = nil;
	if myHero:GetSpellData(SUMMONER_1).name:lower():find("summonerflash") then 
		Flash = SUMMONER_1;
	elseif myHero:GetSpellData(SUMMONER_2).name:lower():find("summonerflash") then 
		Flash = SUMMONER_2;
	end
	Q = false;
	R = false;
	E = false;
	beyblade = false;
	FlashReady = false;
	havetoflash = false;
	enemyMinions = minionManager(MINION_ENEMY, 850, myHero, MINION_SORT_HEALTH_ASC);
	jungleMinions = minionManager(MINION_JUNGLE, 850, myHero, MINION_SORT_MAXHEALTH_DEC);
	if Param.key then
		CustomPermaShow("BeyBlade Key toggle : ("..KeyConversion(Param._param[9].key)..")", "true", true, ARGB(255, 39, 174, 96), nil, nil, 1);
	else
		CustomPermaShow("BeyBlade Key toggle : ("..KeyConversion(Param._param[9].key)..")", "false", true, ARGB(255, 231, 76, 60), nil, nil, 1);
	end
end

function OnTick()
	if myHero:CanUseSpell(_Q) == READY then
		Q = true;
	else
		Q = false;
	end
	if myHero:CanUseSpell(_R) == READY then
		R = true;
	else
		R = false;
	end
	if myHero:CanUseSpell(_E) == READY then
		E = true;
	else
		E = false;
	end
	Target = GetTarget();
	if myHero:GetSpellData(Flash).currentCd == 0 or myHero:CanUseSpell(Flash) == READY then
		FlashReady = true;
	else
		FlashReady = false;
	end
	if havetoflash and Target ~= nil then
		havetoflash = false;
		CastSpell(Flash, Target.x, Target.z);
		DelayAction(function() havetoflash = false; end)
	end
	DashCheck();
end

function GetTarget()
	local t = nil;
	if _G.AutoCarry and _G.AutoCarry.Keys and _G.Reborn_Loaded ~= nil then
		t = _G.AutoCarry.Crosshair:GetTarget();
	end
	if ValidTarget(t) and t.type == myHero.type then
		return t
	else
		return nil
	end
end

function OnUpdateBuff(unit, buff, stacks)
	if unit and unit.isMe then
		if buff.name:lower() == "yasuoq3w" then
			Q3 = true;
		end
	end
end

function OnRemoveBuff(unit, buff)
	if unit and unit.isMe then
		if buff.name:lower() == "yasuoq3w" then
			Q3 = false;
		end
	end
end

function DashCheck()
	if Q3 and Q and E and FlashReady and Target ~= nil and CanFlashQ3(Target) then
		enemyMinions:update();
		jungleMinions:update();
		for i, unit in pairs(enemyMinions.objects) do
			if GetDistanceSqr(Target, unit) < 180625 and GetDistanceSqr(unit) < 90000 then
				beyblade = true;
				CastSpell(_E, unit);
			end
		end
		for i, unit in pairs(jungleMinions.objects) do
			if GetDistanceSqr(Target, unit) < 180625 and GetDistanceSqr(unit) < 90000 then
				beyblade = true;
				CastSpell(_E, unit);
			end
		end
	end
end

function OnAnimation(unit, animation)
	if unit.isMe then
		if animation == "Spell3" then
			if beyblade == true and FlashReady and Target ~= nil and Q3 and Q then
				beyblade = false;
				CastSpell(_Q, myHero.x, myHero.z);
				havetoflash = true;
			end
		end
	end
end

function CanFlashQ3(unit)
	if unit ~= nil and GetDistanceSqr(unit) > myHero.range * myHero.range then
		if Param.Enable and (Param.QE or Param.Auto or Param.key) then
			if (Param.key and R) or (Param.QE and (unit.health < q3Dmg(unit) + eDmg(unit) or (R and unit.health < unit.maxHealth / 2)) and EnemyInRange() == 1) or (Param.Auto and (CanHit(Param.HowMuch) and R)) then
				return true
			else
				return false
			end
		else
			return false
		end
	else
		return false
	end
end

function q3Dmg(unit)
	local l = myHero:GetSpellData(_Q).level;
	if l > 0 then
		local r = l * 20;
		local d_t = myHero.totalDamage + r;
		local crit = math.round(math.abs(myHero.critChance)*100);
		if crit == 100 then
			d_t = d_t * 1.9;
		end
		return math.floor(myHero:CalcDamage(unit, d_t))
	else
		return 0
	end
end

function rDmg(unit)
	local l = myHero:GetSpellData(_R).level;
	if l > 0 then
		local r = l * 100 + 100;
		local d_t = myHero.addDamage * 1.5;
		return math.floor(myHero:CalcDamage(unit, d_t));
	end
end

function aaDmg(unit)
	return math.floor(myHero:CalcDamage(unit, myHero.totalDamage))
end

function eDmg(unit)
	local l = myHero:GetSpellData(_E).level;
	if l > 0 then
		local r = l * 20 + 50;
		local d_t = (myHero.ap * .6) + r;
		return math.floor(myHero:CalcMagicDamage(unit, d_t))
	else
		return 0
	end
end

function OnDraw()
	if Target ~= nil then
		local damages = 0;
		if R then
			damages = Target.maxHealth / 2;
		else
			damages = q3Dmg(Target) + eDmg(Target); 
		end
		if damages > Target.health + Target.shield and CanFlashQ3() then
			DrawText3D("Overkill :"..math.round(damages - Target.health + Target.shield).."", Target.x, Target.y, Target.z, 30, ARGB(255, 255, 255, 255), 0);
		else
			if Param.Enable and Param.QE then
				DrawText3D("kill in :"..math.round(Target.health - damages).."", Target.x, Target.y, Target.z, 30, ARGB(255, 255, 255, 255), 0);
			end
		end
	end
	if Target ~= nil then
		if Q == true then
			DrawText3D("[Q]",myHero.x-150, myHero.y-100, myHero.z+100, 20, ARGB(255, 39, 174, 96));
		else
			DrawText3D("[Q]",myHero.x-150, myHero.y-100, myHero.z+100, 20, ARGB(255, 192, 57, 43));
		end
		if Q3 == true then
			DrawText3D("[Q3]",myHero.x-100, myHero.y-100, myHero.z+100, 20, ARGB(255, 39, 174, 96));
		else
			DrawText3D("[Q3]",myHero.x-100, myHero.y-100, myHero.z+100, 20, ARGB(255, 192, 57, 43));
		end
		if E == true then
			DrawText3D("[E]",myHero.x-50, myHero.y-100, myHero.z+100, 20, ARGB(255, 39, 174, 96));
		else
			DrawText3D("[E]",myHero.x-50, myHero.y-100, myHero.z+100, 20, ARGB(255, 192, 57, 43));
		end
		if R == true then
			DrawText3D("[R]",myHero.x, myHero.y-100, myHero.z+100, 20, ARGB(255, 39, 174, 96));
		else
			DrawText3D("[R]",myHero.x, myHero.y-100, myHero.z+100, 20, ARGB(255, 192, 57, 43));
		end
		if FlashReady == true then
			DrawText3D("[F]",myHero.x+50, myHero.y-100, myHero.z+100, 20, ARGB(255, 39, 174, 96));
		else
			DrawText3D("[F]",myHero.x+50, myHero.y-100, myHero.z+100, 20, ARGB(255, 192, 57, 43));
		end
	end
end

function Menu()
	Param = scriptConfig("BeyBlade Settings", "BeyBlade");

	Param:addParam("Enable", "Enable BeyBlade :", SCRIPT_PARAM_ONOFF, true);
	Param:addParam("n1", "", SCRIPT_PARAM_INFO, "");
	Param:addParam("QE", "Use BeyBlade if can kill with Q3 + E :", SCRIPT_PARAM_ONOFF, true);
	Param:addParam("n2", "And also 1 enemy in range.", SCRIPT_PARAM_INFO, "");
	Param:addParam("n3", "", SCRIPT_PARAM_INFO, "");
	Param:addParam("Auto", "Use BeyBlade is there is X enemy to hit :", SCRIPT_PARAM_ONOFF, true);
	Param:addParam("HowMuch", "Set a number for X enemy :", SCRIPT_PARAM_SLICE, 3, 0, 5);
	Param:addParam("n4", "", SCRIPT_PARAM_INFO, "");
	Param:addParam("key", "Key to toggle on everytime :", SCRIPT_PARAM_ONKEYTOGGLE, false, string.byte("T"));
	Param:setCallback("key", function(permaShow)
		if permaShow then
			CustomPermaShow("BeyBlade Key toggle : ("..KeyConversion(Param._param[9].key)..")", "true", true, ARGB(255, 39, 174, 96), nil, nil, 1);
		else
			CustomPermaShow("BeyBlade Key toggle : ("..KeyConversion(Param._param[9].key)..")", "false", true, ARGB(255, 231, 76, 60), nil, nil, 1);
		end
	end);
end

function EnemyInRange()
	local n = 0;
	for _, unit in pairs(GetEnemyHeroes()) do
		if ValidTarget(unit) and not unit.dead and unit.visible and unit.health > 0 and GetDistanceSqr(unit) < 2250000 then
			n = n + 1;
		end
	end
	return n
end

function CanHit(nbr)
	local n = 0;
	for _, unit in pairs(GetEnemyHeroes()) do
		if ValidTarget(unit) and not unit.dead and unit.visible and unit.health > 0 and GetDistanceSqr(Target, unit) < 105625 then
			n = n + 1;
		end
	end
	if n >= nbr then
		return true
	else
		return false
	end
end

function Lib()
	local LibPath = LIB_PATH.."SpikeLib.lua"
	if not FileExist(LibPath) then
		local Host = "raw.github.com"
		local Path = "/spyk1/BoL/master/bundle/SpikeLib.lua".."?rand="..math.random(1,10000)
		EloSpikes:Alerte("Libs not found!")
		DownloadFile("https://"..Host..Path, LibPath, function ()  end)
		DelayAction(function () require("SpikeLib") end, 5)
	else
		require("SpikeLib")
	end
end

function KeyConversion(v)

    local K = {};
    K[8] = 'Back';
    K[9] = 'Tab';
    K[13] = 'Enter';
    K[16] = 'Shift';
    K[17] = 'Ctrl';
    K[18] = 'Alt';
    K[19] = 'Pause';
    K[20] = 'Capslock';
    K[21] ='KanaMode';
    K[23] = 'JunjaMode';
    K[24] = 'FinalMode';
    K[25] = 'HanjaMode';
    K[27] = 'Esc';
    K[28] = 'IMEConvert';
    K[29] = 'IMENonconvert';
    K[30] = 'IMEAceept';
    K[31] = 'IMEModeChange';
    K[32] = 'Space';
    K[33] = 'PageUp';
    K[34] = 'PageDown';
    K[35] = 'End';
    K[36] = 'Home';
    K[37] = 'Left';
    K[38] = 'Up';
    K[39] = 'Right';
    K[40] = 'Down';
    K[44] = 'PrintScreen';
    K[45] = 'Insert';
    K[46] = 'Delete';
    K[48] = '0';
    K[49] = '1';
    K[50] = '2';
    K[51] = '3';
    K[52] = '4';
    K[53] = '5';
    K[54] = '6';
    K[55] = '7';
    K[56] = '8';
    K[57] = '9';
    K[65] = 'A';
    K[66] = 'B';
    K[67] = 'C';
    K[68] = 'D';
    K[69] = 'E';
    K[70] = 'F';
    K[71] = 'G';
    K[72] = 'H';
    K[73] = 'I';
    K[74] = 'J';
    K[75] = 'K';
    K[76] = 'L';
    K[77] = 'M';
    K[78] = 'N';
    K[79] = 'O';
    K[80] = 'P';
    K[81] = 'Q';
    K[82] = 'R';
    K[83] = 'S';
    K[84] = 'T';
    K[85] = 'U';
    K[86] = 'V';
    K[87] = 'W';
    K[88] = 'X';
    K[89] = 'Y';
    K[90] = 'Z';
    K[91] = 'LWin';
    K[92] = 'RWin';
    K[93] = 'Apps';
    K[96] = 'NumPad0';
    K[97] = 'NumPad1';
    K[98] = 'NumPad2';
    K[99] = 'NumPad3';
    K[100] = 'NumPad4';
    K[101] = 'NumPad5';
    K[102] = 'NumPad6';
    K[103] = 'NumPad7';
    K[104] = 'NumPad8';
    K[105] = 'NumPad9';
    K[106] = 'Multiply';
    K[107] = 'Add';
    K[108] = 'Separator';
    K[109] = 'Subtract';
    K[110] = 'Decimal';
    K[111] = 'Divide';
    K[112] = 'F1';
    K[113] = 'F2';
    K[114] = 'F3';
    K[115] = 'F4';
    K[116] = 'F5';
    K[117] = 'F6';
    K[118] = 'F7';
    K[119] = 'F8';
    K[120] = 'F9';
    K[121] = 'F10';
    K[122] = 'F11';
    K[123] = 'F12';
    K[144] = 'NumLock';
    K[145] = 'ScrollLock';
    K[186] = ';';;
    K[187] = '=';
    K[188] = ',';
    K[189] = '-';
    K[190] = '.';
    K[191] = '/';
    K[192] = 'Oemtilde';
    K[219] = 'OemOpenBrackets';
    K[220] = 'Oem5';
    K[221] = 'Oem6';
    K[222] = "'";

    return K[v]
end
